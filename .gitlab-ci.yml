stages:
  - test
  - deploy

run_tests_sqlite3:
  stage: test
  image: python:3.8
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - python -m readme_renderer README.rst >/dev/null
    - coverage run --branch --source=taguette tests.py
    - coverage html
    - coverage report | tail -n 1 | grep -o '\([0-9]\+\(\.[0-9]\+\)\?%\)$'
    - flake8 --ignore=W503,W504 tests.py taguette
    - "! find taguette -name '*.py' -exec grep --color 'raise \\(validate\\.\\)\\?InvalidFormat([^_]' {} +"
  artifacts:
    paths:
      - htmlcov

run_tests_sqlite3_latest:
  stage: test
  image: python:3.8
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - rm poetry.lock
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - python tests.py

run_tests_postgres:
  stage: test
  image: python:3.8
  services:
    - postgres:latest
  variables:
    POSTGRES_USER: taguette
    POSTGRES_PASSWORD: taguette
    TAGUETTE_TEST_DB: postgresql://taguette:taguette@postgres/taguette
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - pip install psycopg2-binary
    - python tests.py

run_tests_mysql:
  stage: test
  image: python:3.8
  services:
    - mysql:latest
  variables:
    MYSQL_DATABASE: taguette
    MYSQL_ROOT_PASSWORD: password
    MYSQL_USER: taguette
    MYSQL_PASSWORD: taguette
    TAGUETTE_TEST_DB: mysql+pymysql://taguette:taguette@mysql/taguette
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - pip install pymysql cryptography
    - python tests.py

run_tests_mariadb:
  stage: test
  image: python:3.8
  services:
    - mariadb:latest
  variables:
    MYSQL_DATABASE: taguette
    MYSQL_ROOT_PASSWORD: password
    MYSQL_USER: taguette
    MYSQL_PASSWORD: taguette
    TAGUETTE_TEST_DB: mysql+pymysql://taguette:taguette@mariadb/taguette
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - pip install pymysql cryptography
    - python tests.py

run_tests_pypy:
  stage: test
  image: pypy:3.7
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - pypy3 -m venv /tmp/venv
    - . /tmp/venv/bin/activate
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - python tests.py

run_tests_py35:
  stage: test
  image: python:3.5
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - python tests.py

run_tests_py39:
  stage: test
  image: python:3.9
  script:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python - --version 1.1.4
    - /root/.poetry/bin/poetry config virtualenvs.create false
    - $HOME/.poetry/bin/poetry install --no-interaction
    - scripts/update_translations.sh
    - python tests.py
