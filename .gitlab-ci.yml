stages:
  - test
  - deploy

sqlite3:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  script:
    - uv sync --locked
    - uv run scripts/update_translations.sh
    - uv run python -m readme_renderer README.rst >/dev/null
    - uv run python -Wd -m coverage run --branch --source=taguette tests.py -v
    - uv run coverage html
    - uv run coverage report | tail -n 1 | grep -o '\([0-9]\+\(\.[0-9]\+\)\?%\)$'
    - uv run flake8 --ignore=W503,W504 tests.py taguette
    - "! find taguette -name '*.py' -exec grep --color 'raise \\(validate\\.\\)\\?InvalidFormat([^_]' {} +"
  artifacts:
    paths:
      - htmlcov

sqlite3_valkey:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  services:
    - name: valkey/valkey:latest
      alias: valkey
  script:
    - uv sync --locked
    - uv run scripts/update_translations.sh
    - TAGUETTE_TEST_REDIS=redis://valkey:6379 uv run python -Wd tests.py -v

frontend_firefox:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yy xvfb firefox-esr
    - curl -Lo /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
    - tar -zxf /tmp/geckodriver.tar.gz -C /usr/local/bin geckodriver
    - chmod +x /usr/local/bin/geckodriver
    - uv sync --locked
    - uv run scripts/update_translations.sh
    - TAGUETTE_TEST_WEBDRIVER=firefox xvfb-run uv run python tests.py -v TestSeleniumMultiuser

frontend_chromium_valkey:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  services:
    - name: valkey/valkey:latest
      alias: valkey
  script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yy xvfb chromium-driver
    - uv sync --locked
    - uv run scripts/update_translations.sh
    - TAGUETTE_TEST_WEBDRIVER=chromium TAGUETTE_TEST_REDIS=redis://valkey:6379 xvfb-run uv run python tests.py -v TestSeleniumMultiuser

frontend_chromium_subdir:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yy xvfb chromium-driver
    - uv sync --locked
    - uv run scripts/update_translations.sh
    - TAGUETTE_TEST_WEBDRIVER=chromium TAGUETTE_TEST_BASE_PATH=/base/path xvfb-run uv run python tests.py -v TestSeleniumMultiuser

sqlite3_latest:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.12-bookworm
  script:
    - pip --disable-pip-version-check --no-cache-dir install --upgrade setuptools
    - rm uv.lock
    - sed -i 's/^python = ".*$/python = "^3.12"/' pyproject.toml
    - cat pyproject.toml
    - uv sync
    - uv run scripts/update_translations.sh
    - uv run python -Wd tests.py -v

sqlite3_latest_pip:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  script:
    - pip --disable-pip-version-check --no-cache-dir install --upgrade pip
    - pip --disable-pip-version-check --no-cache-dir install "babel<3"
    - uv run scripts/update_translations.sh
    - uv build
    - rm -rf taguette
    - pip --disable-pip-version-check --no-cache-dir install --upgrade dist/taguette-*.whl bcrypt "aiohttp>=3.4,<4"
    - python -Wd tests.py -v

postgres:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  services:
    - postgres:latest
  variables:
    POSTGRES_USER: taguette
    POSTGRES_PASSWORD: taguette
    TAGUETTE_TEST_DB: postgresql://taguette:taguette@postgres/taguette
  script:
    - uv sync --locked --extra postgres
    - uv run scripts/update_translations.sh
    - uv run python -Wd tests.py -v

mariadb:
  stage: test
  image: ghcr.io/astral-sh/uv:0.5.18-python3.10-bookworm
  services:
    - mariadb:latest
  variables:
    MYSQL_DATABASE: taguette
    MYSQL_ROOT_PASSWORD: password
    MYSQL_USER: taguette
    MYSQL_PASSWORD: taguette
    TAGUETTE_TEST_DB: mysql+pymysql://taguette:taguette@mariadb/taguette
  script:
    - uv sync --locked --extra mysql
    - uv run scripts/update_translations.sh
    - uv run python -Wd tests.py -v

sqlite3_pypy:
  stage: test
  image: pypy:latest
  script:
    - curl -LsSf https://astral.sh/uv/install.sh | UV_NO_MODIFY_PATH=1 sh
    - pypy3 -m venv /tmp/venv
    - . /tmp/venv/bin/activate
    - $HOME/.local/bin/uv sync --locked
    - $HOME/.local/bin/uv run scripts/update_translations.sh
    - $HOME/.local/bin/uv run python -Wd tests.py -v
