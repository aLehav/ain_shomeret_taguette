# Default values for taguette.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: quay.io/remram44/taguette
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

secret:
  create: true
  # Override the secret's name, dedfaults to the release name
  name: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

configFile: |
  # This is the configuration file for Taguette
  # It is a Python file, so you can use the full Python syntax
  import os

  # Name of this server
  NAME = "Misconfigured Taguette Server"

  # Address and port to listen on
  BIND_ADDRESS = "0.0.0.0"
  PORT = 7465

  # Base path of the application
  BASE_PATH = "/"

  # A unique secret key that will be used to sign cookies
  SECRET_KEY = os.environ['SECRET_KEY']

  # Database to use
  # This is a SQLAlchemy connection URL; refer to their documentation for info
  # https://docs.sqlalchemy.org/en/latest/core/engines.html
  # If using SQLite3 on Unix, note the 4 slashes for an absolute path
  # (keep 3 before a relative path)
  DATABASE = "postgresql://pguser:{pwd}@{host}/postgres".format(
      pwd=os.environ['POSTGRES_PASSWORD'],
      host=os.environ['POSTGRES_HOST'],
  )

  # Address to send system emails from
  EMAIL = "Misconfigured Taguette Server <taguette@example.com>"

  # Terms of service (HTML file)
  TOS_FILE = None
  # If set to None, no terms of service link will be displayed anywhere

  # Extra footer at the bottom of every page
  #EXTRA_FOOTER = """
  #  | This instance of Taguette is managed by Example University.
  #  Please <a href="mailto:it@example.org">email IT</a> with any questions.
  #"""

  # Default language
  DEFAULT_LANGUAGE = 'en_US'

  # SMTP server to use to send emails
  MAIL_SERVER = None
  #MAIL_SERVER = {
  #    "ssl": True,
  #    "host": "smtp.sendgrid.net",
  #    "port": 465,
  #    "user": "apikey",
  #    "password": os.environ['SMTP_PASSWORD'],
  #}

  # Whether users must explicitly accept cookies before using the website
  COOKIES_PROMPT = False

  # Whether new users can create an account
  REGISTRATION_ENABLED = True

  # Whether users can import projects from SQLite3 files
  SQLITE3_IMPORT_ENABLED = True

  # Set this to true if you are behind a reverse proxy that sets the
  # X-Forwarded-For header.
  # Leave this at False if users are connecting to Taguette directly
  X_HEADERS = False

  # Time limits for converting documents
  CONVERT_TO_HTML_TIMEOUT = 3 * 60  # 3min for importing document into Taguette
  CONVERT_FROM_HTML_TIMEOUT = 3 * 60  # 3min for exporting from Taguette

  # If you want to export metrics using Prometheus, set a port number here
  PROMETHEUS_LISTEN = "0.0.0.0:9101"

  # If you want to report errors to Sentry, set your DSN here
  #SENTRY_DSN = "https://<key>@sentry.io/<project>"

# Additional secrets that you want to reference in the config above
additionalSecrets: []
  #- envVarName: SMTP_PASSWORD
  #  secretName: sendgrid
  #  key: api-key

postgres:
  enabled: true
